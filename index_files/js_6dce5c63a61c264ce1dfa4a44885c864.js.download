var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");

// $Id: googleanalytics.js,v 1.3.2.11 2010/09/19 11:38:41 hass Exp $

$(document).ready(function() {

  // Attach onclick event to document only and catch clicks on all elements.
  $(document.body).click(function(event) {
    // Catch only the first parent link of a clicked element.
    $(event.target).parents("a:first,area:first").andSelf().filter("a,area").each(function() {

      var ga = Drupal.settings.googleanalytics;
      // Expression to check for absolute internal links.
      var isInternal = new RegExp("^(https?):\/\/" + window.location.host, "i");
      // Expression to check for special links like gotwo.module /go/* links.
      var isInternalSpecial = new RegExp("(\/go\/.*)$", "i");
      // Expression to check for download links.
      var isDownload = new RegExp("\\.(" + ga.trackDownloadExtensions + ")$", "i");

      try {
        // Is the clicked URL internal?
        if (isInternal.test(this.href)) {
          // Is download tracking activated and the file extension configured for download tracking?
          if (ga.trackDownload && isDownload.test(this.href)) {
            // Download link clicked.
            var extension = isDownload.exec(this.href);
            pageTracker._trackEvent("Downloads", extension[1].toUpperCase(), this.href.replace(isInternal, ''));
          }
          else if (isInternalSpecial.test(this.href)) {
            // Keep the internal URL for Google Analytics website overlay intact.
            pageTracker._trackPageview(this.href.replace(isInternal, ''));
          }
        }
        else {
          if (ga.trackMailto && $(this).is("a[href^=mailto:],area[href^=mailto:]")) {
            // Mailto link clicked.
            pageTracker._trackEvent("Mails", "Click", this.href.substring(7));
          }
          else if (ga.trackOutgoing && this.href) {
            // External link clicked.
            pageTracker._trackEvent("Outgoing links", "Click", this.href);
          }
        }
      } catch(err) {}

    });
  });
});
;


}
/*
     FILE ARCHIVED ON 19:29:14 Apr 29, 2013 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:24:05 Jun 04, 2020.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  exclusion.robots: 0.219
  PetaboxLoader3.resolve: 63.418
  exclusion.robots.policy: 0.203
  PetaboxLoader3.datanode: 65.376 (4)
  RedisCDXSource: 149.567
  captures_list: 229.329
  CDXLines.iter: 15.755 (3)
  esindex: 0.015
  LoadShardBlock: 53.108 (3)
  load_resource: 83.143
*/